name: dbt-server CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # TODO: add code linting
  # lint:
  #   name: lint code
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: checkout code
  #       uses: actions/checkout@v2

  # TODO: add automated testing
  # test:
  #   name: test code
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: checkout code
  #       uses: actions/checkout@v2

  build-staging-image:
    name: build and publish staging image
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dbt-core-version: [0.21.0]
        dbt-database-adapter: [snowflake]
    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - uses: ./.github/actions/docker-build-and-push
        with:
          image-name: dbt-server-${{ matrix.dbt-core-version }}
          docker-file-path: Dockerfile
          docker-build-args: |
            DBT_CORE_VERSION=${{ matrix.dbt-core-version }}
            DBT_DATABASE_ADAPTER_PACKAGE=dbt-${{ matrix.dbt-database-adapter }}
          registry-endpoint: ${{ secrets.STAGING_FROM_ACCOUNT }}.dkr.ecr.us-east-1.amazonaws.com
          registry-username: ${{ secrets.STAGING_AWS_ACCESS_KEY_ID }}
          registry-password: ${{ secrets.STAGING_AWS_SECRET_ACCESS_KEY }}

  build-production-image:
    name: build and publish production image
    needs: [build-staging-image]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dbt-core-version: [0.21.0]
        dbt-database-adapter: [snowflake]
    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - uses: ./.github/actions/docker-build-and-push
        with:
          image-name: dbt-server-${{ matrix.dbt-core-version }}
          docker-file-path: Dockerfile
          docker-build-args: |
            DBT_CORE_VERSION=${{ matrix.dbt-core-version }}
            DBT_DATABASE_ADAPTER_PACKAGE=dbt-${{ matrix.dbt-database-adapter }}
          registry-endpoint: ${{ secrets.INFRA_ROOT_FROM_ACCOUNT }}.dkr.ecr.us-east-1.amazonaws.com
          registry-username: ${{ secrets.INFRA_ROOT_AWS_ACCESS_KEY_ID }}
          registry-password: ${{ secrets.INFRA_ROOT_AWS_SECRET_ACCESS_KEY }}
